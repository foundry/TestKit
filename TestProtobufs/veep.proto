syntax = "proto3";

package veepio;

option objc_class_prefix = "VPKP";
option java_package = "com.veepio.protobuf";
option java_outer_classname = "Protobuf";

// Whole veep
// Should work for encoding and decoding

message Veep {
   VeepHeader header = 1;
   // All elements involved in all veep tracks, in order of first use.
   repeated VeepTrackElement trackElements = 2;
}

// Parts of veep for streaming (produces equivalent output but won't be read correctly)
// Should work for writing but not reading

message VeepHeaderContainer {
   VeepHeader header = 1;
   reserved 2;
}

message VeepTrackElementContainer {
   reserved 1;
   VeepTrackElement trackElement = 2;
}

// How to read a streamable veep:
// Should work for reading and writing

// Q: Can we get rid of this pesky field descriptor?
// A: Not if we want the nonstreamable veep to be a valid protobuf message

// unsigned char       0x0a  Literal
// varint                 ?  Length of VeepHeader as varint
// VeepHeader             ?

// while not eof
// unsigned char       0x12  Literal
// varint                 ?  Length of VeepTrackElement as varint
// VeepTrackElement       ?

// Veep data
message VeepHeader {
   string identifier = 1;
   string title = 2;
   string description = 3;
   string creatorEmail = 4;

   bytes thumbnailData = 5;
   string originalContentUrl = 6;
}

// Veep Track metadata - within stream
message VeepTrackHeader {
   enum VeepTrackType {
     URL = 0;
     RETAIL = 1;
     BLOG = 2;
   }

   string identifier = 1;
   string title = 2;
   string description = 3;
   string url = 4;
   VeepTrackType type = 7;
}

// Abstract still geometry
message Rect {
  float x = 1;
  float y = 2;
  float width = 3;
  float height = 4;
}

// Time representations

// This one is based on Apple's CMTime
message DiscreteTime {
  int32 timescale = 1;
  int64 value = 2;
}

// This one is based on Apple's CMTime
message DiscreteTimeRange {
    DiscreteTime start = 1;
    DiscreteTime duration = 2;
}

// Annotation is present and stationary for a time range defined discreetly
message DiscreteTimeRangeRect {
    DiscreteTimeRange timeRange = 1;
    Rect rect = 2;
}

// Inner unit of annotation
message VeepTrackElement {
   oneof meta {
     VeepTrackHeader header = 1;
     string identifier = 2;
   }

   // All future shapes and representations will go here
   oneof data {
     DiscreteTimeRangeRect discreteTimeRangeRect = 9;
     Rect rect = 10;
   }
}

